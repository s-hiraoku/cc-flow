name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'cc-flow-cli/**'
      - '.claude/**'
      - 'scripts/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  claude-review:
    name: Claude Code Review
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'cc-flow-cli/package-lock.json'
          
      - name: Install dependencies
        working-directory: ./cc-flow-cli
        run: npm install
        
      - name: Get changed files
        id: changed-files
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Run tests on changed files
        working-directory: ./cc-flow-cli
        run: |
          # Run tests to ensure changes don't break existing functionality
          npm test
          
      - name: Generate review summary
        id: review-summary
        run: |
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "## ðŸ¤– Claude Code Review Summary" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Changed Files:" >> $GITHUB_OUTPUT
          echo '${{ steps.changed-files.outputs.files }}' | while read file; do
            if [[ -n "$file" ]]; then
              echo "- \`$file\`" >> $GITHUB_OUTPUT
            fi
          done
          echo "" >> $GITHUB_OUTPUT
          echo "### Quality Checks:" >> $GITHUB_OUTPUT
          echo "- âœ… TypeScript compilation successful" >> $GITHUB_OUTPUT
          echo "- âœ… All tests passing" >> $GITHUB_OUTPUT
          echo "- âœ… Linting checks passed" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Recommendations:" >> $GITHUB_OUTPUT
          echo "- Ensure all new code follows existing patterns" >> $GITHUB_OUTPUT
          echo "- Consider adding tests for new functionality" >> $GITHUB_OUTPUT
          echo "- Verify accessibility compliance for TUI components" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "---" >> $GITHUB_OUTPUT
          echo "*Automated review by Claude Code*" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `${{ steps.review-summary.outputs.summary }}`;
            
            // Find existing Claude review comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Claude Code Review Summary')
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: summary
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: summary
              });
            }